性質
====

性質は F# の関数定義として表現されます。性質はそのパラメータで以って例外なく定量化されます、だから

.. code-block:: fsharp

  let revRevIsOrig xs = List.rev(List.rev xs) = xs

は等式は全てのリスト xs で成り立つのです。性質は必ず単相型をもってはいけません。上記のような「多層的な」性質は、まるでジェネリックな引数が型オブジェクトであるかのようにテストされます。つまり、様々な単純型(bool, char, string, ...)が生成されることを意味します。それは生成された1つのリストに複数の型が含まれる場合があるかも知れない、例えば {['r', "1a", true]} が上記の性質でチェックされるため使われうるということです。ですが生成された値は型をベースにしているので、xs に異なる推論された型や明示的な型を与えることで振る舞いを単純に変更することもできます:

.. code-block:: fsharp

  let revRevIsOrigInt (xs:list<int>) = List.rev(List.rev xs) = xs

は int のリストについてのみチェックされます。FsCheck は様々な形式の性質をチェック